@page "/activities/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]

<h3 class="card-title">Activities</h3>
<br />
<a href="/activities/create" class="btn btn-secondary">
    <span class="oi oi-plus"></span>
    Create New Activity
</a>
<br />
<br />

@if (Activities == null)
{
    <div class="alert alert-info">Loading Activities...</div>
}
else
{
    <table class="table table-responsive">
        <thead>
            <tr>
                <th>Name</th>
                <th>Activity Type</th>
                <th>Duration</th>
                <th>Description</th>
                <th>Starts At</th>
                <th>Ends At</th>
                <th>Price</th>
                <th>Image</th>
                <th>Actions</th>
            </tr>
        </thead>

        <tbody>
            @foreach (var activity in Activities)
            {
                <tr>
                    <td>@activity.Name</td>
                    <td>@(activity.Type ?? "")</td>
                    <td>@activity.Duration</td>
                    <td>@(activity.Description ?? "")</td>
                    <td>@(activity.TimeStart.HasValue ? activity.TimeStart.Value.ToString("hh : mm : tt") : "")</td>
                    <td>@(activity.TimeEnd.HasValue ? activity.TimeEnd.Value.ToString("hh : mm : tt") : "")</td>
                    <td>@activity.Price.ToString()$</td>
                    <td>
                        @if(activity.ActivityImage is not null){
                            <img width="100" height="60" style="object-fit:contain;" src="@ConvertByteArrayToBase64(@activity.ActivityImage)" alt="image" />
                        }
                    </td>
                    <td>
                        <a href="/activities/view/@activity.Id" class="btn btn-primary">
                            <span class="oi oi-book"></span>
                        </a>
                        <a href="/activities/edit/@activity.Id" class="btn btn-warning">
                            <span class="oi oi-pencil"></span>
                        </a>
                        <button class="btn btn-danger" @onclick="@(()=>Delete(activity.Id))">
                            <span class="oi oi-delete"></span>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<style>
    td{
        vertical-align: middle;
    }
</style>

@code {
    private List<Activity>? Activities;

    protected async override Task OnInitializedAsync()
    {
        Activities = await _client.GetFromJsonAsync<List<Activity>>($"{Endpoints.ActivityEndpoint}");
    }

    private string ConvertByteArrayToBase64(byte[] image)
    {
        var base64 = Convert.ToBase64String(image);
        return String.Format("data:image/gif;base64,{0}", base64);
    }

    async Task Delete(int activityId)
    {
        var activity = Activities.First(q => q.Id == activityId);
        var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {activity.Name}?");
        if (confirm)
        {
            await _client.DeleteAsync($"{Endpoints.ActivityEndpoint}/{activityId}");
            await OnInitializedAsync();
        }
    }
}
