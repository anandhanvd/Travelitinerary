
@page "/customers/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]

<h3 class=" = card-title">Itinerary Customers</h3>
<br />

<a href="/customers/create" class="btn btn-secondary">
    <span class="oi oi-plus"></span>
    Create New Customer
</a>
<br />
<br />

@if (Customers == null)
{
    <div class="alert alert-info">Loading Customers...</div>
}
else
{
    <table class="table table-responsive" id="customersTable">
        <thead>
            <tr>
                
                <th>First Name</th>
                <th>Nationality</th>
                <th>Contact Number</th>
                <th>Email Address</th>
                <th>Gender</th>
                <th>Address</th>
                <th>Date of Birth</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var customer in Customers)
            {
                <tr>
                    <td>@customer.FirstName</td>
                    <td>@customer.Nationality</td>
                    <td>@customer.ContactNumber</td>
                    <td>@customer.EmailAddress</td>
                    <td>@customer.Gender</td>
                    <td>@customer.DateOfBirth.ToString("dd MMMM yyyy")</td>
                    <td>@customer.Address</td>
                    <td>
                        <a href="/customers/view/@customer.Id" class="btn btn-primary">
                            <span class="oi oi-eye"></span>
                        </a>
                        <a href="/customers/edit/@customer.Id" class="btn btn-warning">
                            <span class="oi oi-pencil"></span>
                        </a>
                        <button class="btn btn-danger" @onclick="@(()=> Delete(customer.Id))">
                            <span class="oi oi-delete"></span>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Customer>? Customers;

    protected async override Task OnInitializedAsync()
    {
        Customers = await _client.GetFromJsonAsync<List<Customer>>($"{Endpoints.CustomersEndpoint}");
    }
    async Task Delete(int customerId)
    {
        if (Customers != null)
        {
            
                await _client.DeleteAsync($"{Endpoints.CustomersEndpoint}/{customerId}");
                await OnInitializedAsync();
            }
        
    }
}