@using Travelitinerary.Client.Components
<EditForm Model="@flights" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <fieldset disabled="@Disabled">
        <div class="form-group">
            <label>Name: </label>
            <div>
                <InputText @bind-Value="@flights.AirlineName" class="form-control" />
                <ValidationMessage For="@(() => flights.AirlineName)" />
            </div>
        </div>
        <div class="form-group">
            <label>Arrival: </label>
            <div>
                <InputText @bind-Value="@flights.Arrival" class="form-control" />
                <ValidationMessage For="@(() => flights.Arrival)" />
            </div>
        </div>

        <div class="form-group">
            <label>Departure: </label>
            <div>
                <InputText @bind-Value="@flights.Departure" class="form-control" />
                <ValidationMessage For="@(() => flights.Departure)" />
            </div>
        </div>

        <div class="form-group">
            <label>Details: </label>
            <div>
                <InputText @bind-Value="@flights.Details" class="form-control" />
                <ValidationMessage For="@(() => flights.Details)" />
            </div>
        </div>

        <div class="form-group">
            <label>WeekDay: </label>
            <div>
                <InputText @bind-Value="@flights.WeekDay" class="form-control" />
                <ValidationMessage For="@(() => flights.WeekDay)" />
            </div>
        </div>

        <div class="form-group">
            <label>CheckIn: </label>
            <div>
                <InputDate @bind-Value="@flights.CheckIn" class="form-control" />
                <ValidationMessage For="@(() => flights.CheckIn)" />
            </div>
        </div>

        <div class="form-group">
            <label>SeatClass: </label>
            <div>
                <InputText @bind-Value="@flights.SeatClass" class="form-control" />
                <ValidationMessage For="@(() => flights.SeatClass)" />
            </div>
        </div>

        <div class="form-group">
            <label>Available Seats: </label>
            <div>
                <InputNumber @bind-Value="@flights.Availableseats" class="form-control" />
                <ValidationMessage For="@(() => flights.Availableseats)" />
            </div>
        </div>

        <div class="form-group">
            <label>Price: </label>
            <div>
                <InputNumber @bind-Value="@flights.Price" class="form-control" />
                <ValidationMessage For="@(() => flights.Price)" />
            </div>
        </div>

    </fieldset>

    <br />
    <br />

    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block">
            @ButtonText
        </button>
    }

    <BackToList Target="flights"/>

</EditForm>

@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Flight? flights { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }
}
