@page "/flights/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]
@layout Second
<style>
    /* CSS for the hover effect */
    .flight-card {
        transition: transform 0.2s;
    }

        .flight-card:hover {
            transform: translateY(-5px); /* Adjust the amount of pop-up as desired */
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
</style>
<div class="card">
    <h3 class="card-title text-center text-black">Itinerary Flights</h3>
    <br />
    <div id="imageCarousel" class="carousel slide" data-ride="carousel" style="width: 100%; margin-right: 15px;">
        <div class="carousel-inner">
            <div class="carousel-item active">
                <img src="https://images.pexels.com/photos/87000/pexels-photo-87000.jpeg?auto=compress&cs=tinysrgb&w=600" class="d-block w-100" alt="Slide 1">
            </div>
            <div class="carousel-item">
                <img src="https://images.pexels.com/photos/96799/pexels-photo-96799.jpeg?auto=compress&cs=tinysrgb&w=600" class="d-block w-100" alt="Slide 2">
            </div>
            <div class="carousel-item">
                <img src="https://images.pexels.com/photos/130844/pexels-photo-130844.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1" class="d-block w-100" alt="Slide 3">
            </div>
        </div>
        <a class="carousel-control-prev" href="#imageCarousel" role="button" data-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="sr-only">Previous</span>
        </a>
        <a class="carousel-control-next" href="#imageCarousel" role="button" data-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="sr-only">Next</span>
        </a>
    </div>
    <div class="d-flex justify-content-between">
        <a href="/flights/create" class="btn btn-primary">
            <span class="oi oi-plus"></span>
            Create New Flight
        </a>
    </div>
    <br />

    @if (Flights == null)
    {
        <div class="alert alert-info">Loading Flights...</div>
    }
    else
    {
        <div class="card-body row">
            @foreach (var flight in Flights)
            {
                <div class="col-md-4 mb-4" style="min-width: 300px;">
                    <div class="card h-100 flight-card">
                        <div class="card-body">
                            <h5 class="card-title">@flight.AirlineName</h5>
                            <p class="card-text"><strong>Departure:</strong> @flight.Departure</p>
                            <p class="card-text"><strong>Arrival:</strong> @flight.Arrival</p>
                            <p class="card-text"><strong>Details:</strong> @flight.Details</p>
                            <p class="card-text"><strong>Week Day:</strong> @flight.WeekDay</p>
                            <p class="card-text"><strong>Check-In:</strong> @(flight.CheckIn.HasValue ? flight.CheckIn.Value.ToString("yyyy-MM-dd HH:mm:ss") : "Not specified")</p>
                            <p class="card-text"><strong>Seat Class:</strong> @flight.SeatClass</p>
                            <p class="card-text"><strong>Available Seats:</strong> @flight.Availableseats</p>
                            <p class="card-text"><strong>Price:</strong> @flight.Price</p>
                        </div>
                        <div class="card-footer">
                            <a href="/flights/view/@flight.Id" class="btn btn-primary">
                                <span class="oi oi-eye"></span> View
                            </a>
                            <a href="/flights/edit/@flight.Id" class="btn btn-warning">
                                <span class="oi oi-pencil"></span> Edit
                            </a>
                            <button class="btn btn-danger" @onclick="@(()=> DeleteFlight(flight.Id))">
                                <span class="oi oi-delete"></span> Delete
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@code {
    private List<Flight>? Flights;

    protected async override Task OnInitializedAsync()
    {
        Flights = await _client.GetFromJsonAsync<List<Flight>>($"{Endpoints.FlightEndpoint}");
    }

    async Task DeleteFlight(int flightId)
    {
        if (Flights != null)
        {
            await _client.DeleteAsync($"{Endpoints.FlightEndpoint}/{flightId}");
            await OnInitializedAsync();
        }
    }
}
