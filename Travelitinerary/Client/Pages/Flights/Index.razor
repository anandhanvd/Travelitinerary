@page "/flights/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]

<h3 class="card-title">Itinerary Flights</h3>
<br />

<a href="/flights/create" class="btn btn-secondary">
    <span class="oi oi-plus"></span>
    Create New Flight
</a>
<br />
<br />

@if (Flights == null)
{
    <div class="alert alert-info">Loading Flights...</div>
}
else
{
    <table class="table table-responsive" id="flightsTable">
        <thead>
            <tr>
                <th>Flight ID</th>
                <th>Airline</th>
                <th>Departure</th>
                <th>Arrival</th>
                <th>Details</th>
                <th>Week Day</th>
                <th>Check-In</th>
                <th>Seat Class</th>
                <th>Available Seats</th>
                <th>Price</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var flight in Flights)
            {
                <tr>
                    <td>@flight.Id</td>
                    <td>@flight.AirlineName</td>
                    <td>@flight.Departure</td>
                    <td>@flight.Arrival</td>
                    <td>@flight.Details</td>
                    <td>@flight.WeekDay</td>
                    <td>@(flight.CheckIn.HasValue ? flight.CheckIn.Value.ToString("yyyy-MM-dd HH:mm:ss") : "Not specified")</td>
                    <td>@flight.SeatClass</td>
                    <td>@flight.Availableseats</td>
                    <td>@flight.Price</td>
                    <td>
                        <a href="/flights/view/@flight.Id" class="btn btn-primary">
                            <span class="oi oi-eye"></span>
                        </a>
                        <a href="/flights/edit/@flight.Id" class="btn btn-warning">
                            <span class="oi oi-pencil"></span>
                        </a>
                        <button class="btn btn-danger" @onclick="@(()=> DeleteFlight(flight.Id))">
                            <span class="oi oi-delete"></span>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Flight>? Flights;

    protected async override Task OnInitializedAsync()
    {
        Flights = await _client.GetFromJsonAsync<List<Flight>>($"{Endpoints.FlightEndpoint}");
    }

    async Task DeleteFlight(int flightId)
    {
        if (Flights != null)
        {
            await _client.DeleteAsync($"{Endpoints.FlightEndpoint}/{flightId}");
            await OnInitializedAsync();
        }
    }
}
