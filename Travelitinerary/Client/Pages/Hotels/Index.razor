@layout Second
@page "/hotels/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]

<h3 class="card-title">Itinerary Hotels</h3>
<br />

<a href="/hotels/create" class="btn btn-secondary">
    <span class="oi oi-plus"></span>
    Create New Hotel
</a>
<br />
<br />

@if (Hotels == null)
{
    <div class="alert alert-info">Loading Hotels...</div>
}
else
{
    <table class="table table-responsive" id="hotelsTable">
        <thead>
            <tr>
                <th>Hotel ID</th>
                <th>Name</th>
                <th>Address</th>
                <th>Details</th>
                <th>Check-In</th>
                <th>Check-Out</th>
                <th>Room Type</th>
                <th>Price</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var hotel in Hotels)
            {
                <tr>
                    <td>@hotel.Id</td>
                    <td>@hotel.Name</td>
                    <td>@hotel.Address</td>
                    <td>@hotel.Details</td>
                    <td>@(hotel.CheckIn.HasValue ? hotel.CheckIn.Value.ToString("yyyy-MM-dd") : "Not specified")</td>
                    <td>@hotel.CheckOut.ToString("yyyy-MM-dd")</td>
                    <td>@hotel.RoomType</td>
                    <td>@hotel.Price</td>
                    <td>
                        <a href="/hotels/view/@hotel.Id" class="btn btn-primary">
                            <span class="oi oi-eye"></span>
                        </a>
                        <a href="/hotels/edit/@hotel.Id" class="btn btn-warning">
                            <span class="oi oi-pencil"></span>
                        </a>
                        <button class="btn btn-danger" @onclick="@(()=> DeleteHotel(hotel.Id))">
                            <span class="oi oi-delete"></span>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Hotel>? Hotels;

    protected async override Task OnInitializedAsync()
    {
        Hotels = await _client.GetFromJsonAsync<List<Hotel>>($"{Endpoints.HotelEndpoint}");
    }

    async Task DeleteHotel(int hotelId)
    {
        if (Hotels != null)
        {
            await _client.DeleteAsync($"{Endpoints.HotelEndpoint}/{hotelId}");
            await OnInitializedAsync();
        }
    }
}
