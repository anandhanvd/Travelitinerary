@page "/staffs/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]

<h3 class="card-title text-white">Staffs</h3>
<br />
<a href="/staffs/create" class="btn btn-secondary">
    <span class="oi oi-plus"></span>
    Create New Staff
</a>
<br />
<br />

@if (Staffs == null)
{
    <div class="alert alert-info">Loading Staffs...</div>
}
else
{
    <div class="row">
        @foreach (var staff in Staffs)
        {
            <div class="col-md-4 mb-1">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">@staff.FirstName</h5>
                        <div>
                                <div><strong>Date of Birth:</strong> @staff.DateOfBirth.ToString("dd MMM, yyyy")</div>
                            <div><strong>Phone:</strong> @staff.Phone</div>
                        </div>

                        <div class="btn-group" role="group" aria-label="Actions">
                            <a href="/staffs/view/@staff.Id" class="btn btn-primary">
                                <span class="oi oi-eye"></span>
                            </a>
                            <a href="/staffs/edit/@staff.Id" class="btn btn-warning">
                                <span class="oi oi-pencil"></span>
                            </a>
                            <button class="btn btn-danger" @onclick="@(()=>Delete(staff.Id))">
                                <span class="oi oi-delete"></span>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}

@code {
    private List<Staff>? Staffs;

    protected async override Task OnInitializedAsync()
    {
        Staffs = await _client.GetFromJsonAsync<List<Staff>>($"{Endpoints.StaffsEndpoint}");
    }

    async Task Delete(int staffId)
    {
        var staff = Staffs.First(q => q.Id == staffId);
        var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {staff.FirstName}?");
        if (confirm)
        {
            await _client.DeleteAsync($"{Endpoints.StaffsEndpoint}/{staffId}");
            await OnInitializedAsync();
        }
    }

}